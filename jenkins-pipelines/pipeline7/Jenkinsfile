def err = null
try {

node("master") { sh "hostname"

parrallel ( 

	node("testslave"){
		sh "hostname"
				}
	node("testslave2"){
		sh "hostname"
				}
	node("testslave3"){
		sh "hostname"
				}
	)
}



} catch (caughtError) { //End of Try
    err = caughtError
    currentBuild.result = "FAILURE"
} finally {
    (currentBuild.result != "ABORTED") && node("master") {
        // Send e-mail notifications for failed or unstable builds.
        // currentBuild.result must be non-null for this step to work.
        //step(){
	//	sh "echo 'echo Sending e-mail'"
	//	}
     step([$class: 'Mailer', notifyEveryUnstableBuild: true, recipients: emailextrecipients([[$class: 'CulpritsRecipientProvider'], [$class: 'RequesterRecipientProvider']])])
 }
    if (err) {
        throw err
    }
}






