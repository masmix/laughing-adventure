version: '3'
services:
  #git-server:
  #  build: ./git
  #  ports:
  #    - "2222:22"
  #  restart: always
  #  container_name: git-server
  #  ports:
  #    - "2222:22"
  #  volumes:
  #  - /home/wojtek/git-server/keys:/git-server/keys
  #  - /home/wojtek/git-server/repos:/git-server/repos
  #  networks:
  #       jenkins-net:
  #         aliases:
  #          - git-server
  #tomcat:
  #  build: ./tomcat
  #  ports:
  #    - "8080:8080"
  #  restart: always
  #  container_name: tomcat
  #  networks:
  #       jenkins-net:
  #         aliases:
  #          - tomcat
  #sonarqube:
  #  build: ./sonarqube
  #  ports:
  #    - "9000:9000"
  #    - "9092:9092"
  #  restart: always
  #  container_name: sonarqube
  #  networks:
  #       jenkins-net:
  #         aliases:
  #          - sonarqube
  #nexus:
  #  build: ./nexus
  #  ports:
  #    - "8081:8081"
  #  restart: always
  #  container_name: nexus
  #  networks:
  #       jenkins-net:
  #         aliases:
  #          - nexus
  #selenium_hub:
  #  build: selenium_hub
    #image: selenium/hub:3.14.0-arsenic
  #  ports:
   #   - "4444:4444"
   # restart: always
   # container_name: selenium_hub
   # networks:
   #      jenkins-net:
   #        aliases:
    #        - selenium_hub
  #selenium_node_firefox:
  #  build: ./selenium_node_firefox
  #  #image: selenium/node-firefox:3.14.0-arsenic
   # depends_on:
   #   - selenium_hub
   # restart: always
  #  container_name: selenium_node_firefox
   # environment:
   #   - HUB_HOST=selenium_hub
   #   - HUB_PORT=4444
   # networks:
   #      jenkins-net:
  #         aliases:
  #          - selenium_node_firefox
  #selenium_node_chrome:
  #  build: ./selenium_node_chrome
  #  #image: selenium/node-chrome:3.14.0-arsenic
   # depends_on:
   #   - selenium_hub
   # restart: always
   # container_name: selenium_node_chrome
   # environment:
   #   - HUB_HOST=selenium_hub
   #   - HUB_PORT=4444
   # networks:
   #          jenkins-net:
   #            aliases:
   #             - selenium_node_chrome
  master:
    image: masmix/jenkins_master:latest
    #build: ./jenkins-master
    ports:
      - "50000:50000"
      - "8080:8080"
    volumes:
      - jenkins-log:/var/log/jenkins
      - jenkins-data:/var/jenkins_home
    networks:
      - jenkins-net
#  nginx:
#    image: jenkins_nginx:latest
    #build: ./jenkins-nginx
#    ports:
#      - "80:80"
#    networks:
#      - jenkins-net
  slave:
    image: masmix/jenkins_slave:latest
    #build: ./jenkins-slave
    networks:
      - jenkins-net
    #deploy:
    #    mode: replicated
    #    replicas: 1
  proxy:
    image: masmix/jenkins_proxy:latest
   #ld: ./docker-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
     jenkins-net:
       aliases:
        - proxy1
#    image: ehazlett/docker-proxy:latest
#    #    command: -i
#    #    volumes:
#    #      - /var/run/docker.sock:/var/run/docker.sock
#    #    networks:
#    #      jenkins-net:
#    #        aliases:
#    #          - proxy1
  mongo:
    image: "mongo:3"
    volumes:
      - .mongo:/data/db

    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - jenkins-net
  elasticsearch:
    image: "elasticsearch:2"
    command: "elasticsearch -Des.cluster.name='graylog'"
    volumes:
      - .elasticsearch:/usr/share/elasticsearch/data
    networks:
      - jenkins-net
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
  graylog:
    image: graylog2/server:2.2.1-1
    volumes:
      - .graylog/data/journal:/usr/share/graylog/data/journal
      - .graylog/config:/usr/share/graylog/data/config
    environment:
      GRAYLOG_PASSWORD_SECRET: senhadeexemplo123123123123
      GRAYLOG_ROOT_PASSWORD_SHA2: fec576ecc231a923f56df2b8695df21087324a951fc1beff2af9a42d3bb6f9d1
      GRAYLOG_WEB_ENDPOINT_URI: http://127.0.0.1:9000/api/
    depends_on:
      - mongo
      - elasticsearch
    ports:
      - "80:9000"
      - "12201:12201"
      - "1514:1514"
      - "514:514/udp"
    networks:
      - jenkins-net
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
     
volumes:
 jenkins-data:
 jenkins-log:
# elasticsearch:
# graylog/data/journal:
# graylog/config:
networks:
 jenkins-net:

